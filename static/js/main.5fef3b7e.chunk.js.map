{"version":3,"sources":["../node_modules/typescript/lib sync","containers/cellhook.js","containers/map.js","helpers/primary.js","App.js","reducers/index.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","CellHook","props","handleKeyDown","handleClick","theMap","row","column","_useState","useState","_useState2","Object","slicedToArray","state","setState","rerender","classes","classNames","cell","react_default","a","createElement","tabIndex","concat","className","onClick","onKeyDown","onChange","console","log","Map","_useState3","window","scrollX","_useState4","_useState5","scrollY","_useState6","_useState7","innerWidth","_useState8","windowX","_useState9","innerHeight","_useState10","windowY","cellsX","Math","floor","cellsY","sR","sC","undefined","col","outerArray","i","innerArray","j","push","nestedArray","rows","cols","array","extendNestedArray","preventDefault","keyCode","key","document","getElementById","innerHTML","onContextMenu","sort","b","map","item","subitem","App","Component","rootReducer","combineReducers","Boolean","location","hostname","match","createStoreWithMiddleware","applyMiddleware","createStore","ReactDOM","render","es","store","reducers","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5fef3b7e.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 208;","import React, { useState } from \"react\";\nimport {} from \"../actions/index\";\nimport classNames from \"classnames\";\n// import Rx from \"rx\";\n\nexport default function CellHook(props) {\n  let { handleKeyDown, handleClick, theMap, row, column } = props;\n  //   console.log(\"CELL RERENDER\", row, column);\n  const [state, setState] = useState(false);\n  let rerender = () => setState(!state);\n\n  function handleKeyDownWrap(e) {\n    rerender();\n    return handleKeyDown(e);\n  }\n  function handleClickWrap(e) {\n    rerender();\n    handleClick(row, column);\n  }\n\n  let classes = classNames({\n    cell: true\n  });\n  return (\n    <td\n      tabIndex=\"1\"\n      id={`${row}_${column}`}\n      className={classes}\n      onClick={handleClickWrap}\n      onKeyDown={handleKeyDownWrap}\n      onChange={() => console.log(\"change\")}\n    >\n      {theMap[row][column]}\n    </td>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport _ from \"lodash\";\nimport CellHook from \"./cellhook\";\nimport { useInterval } from \"../hooks\";\nimport {\n  nestedArray,\n  extendNestedArray,\n  nestedObj,\n  extendNestedObj\n} from \"../helpers/primary\";\nimport { mergeSort } from \"../helpers/sorts\";\nimport { createTempVariable } from \"typescript\";\n//this variable name probably needs to be changed;\nlet theMap;\n\nexport default function Map() {\n  const [state, setState] = useState(false);\n  let rerender = () => setState(!state);\n  console.log(\"MAP RERENDER\");\n  const [scrollX, setScrollX] = useState(window.scrollX);\n  const [scrollY, setScrollY] = useState(window.scrollY);\n  const [windowX, setWindowX] = useState(window.innerWidth);\n  const [windowY, setWindowY] = useState(window.innerHeight);\n\n  const cellsX = Math.floor((windowX + scrollX)/ 200);\n  const cellsY = Math.floor((windowY + scrollY) / 60);\n  let sR = 0; //selectedRow\n  let sC = 0; //selectedCol\n  // console.log(\"cellsX\", cellsX)\n  if (theMap === undefined) theMap = nestedArray(cellsY, cellsX);\n  else theMap = extendNestedArray(cellsY, cellsX, theMap);\n  // console.log(theMap)\n  //---Temp Disable this---//\n  // useInterval(() => {\n  //   setScrollX(window.scrollX);\n  //   setScrollY(window.scrollY);\n  //   setWindowX(window.innerWidth);\n  //   setWindowY(window.innerHeight);\n  // }, 1000);\n  // console.log(\"WindowX\", windowX);\n  // console.log(\"ScrollX\", scrollX);\n  let handleKeyDown = e => {\n    e.preventDefault();\n    console.log(\"keyCode\", e.keyCode);\n    switch (e.keyCode) {\n      case 8:\n        theMap[sR][sC] = \"\";\n        break;\n      case 37:\n        sC--;\n        break;\n      case 38:\n        sR--;\n        break;\n      case 39:\n        sC++;\n        break;\n      case 40:\n        sR++;\n        break;\n      case 17:\n        break;\n      default:\n        theMap[sR][sC] += e.key;\n    }\n    document.getElementById(`${sR}_${sC}`).innerHTML = theMap[sR][sC];\n  };\n  function handleClick(row, col) {\n    sR = row;\n    sC = col;\n  };\n  function handleContextMenu(e) {\n    e.preventDefault();\n    theMap = theMap.sort(function(a,b){\n      return b[0] - a[0]\n    })\n    console.log(\"this\", theMap)\n    rerender();\n  }\n\n  return (\n    <div>\n      <table>\n        <tbody\n          onContextMenu={handleContextMenu}\n        >\n          {theMap.map((item, row) => {\n            return (\n              <tr key={row} className=\"mapRow\">\n                {item.map((subitem, col) => {\n                  return (\n                    <CellHook\n                      key={col}\n                      row={row}\n                      column={col}\n                      // selected={sR===row && sC===col}\n                      handleKeyDown={handleKeyDown}\n                      handleClick={handleClick}\n                      theMap={theMap}\n                    />\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","export function validAlphaNum(input) {\n  //regex for number, symbol, letter\n  if (/[a-zA-Z0-9-_]/.test(input)) return true;\n  return false;\n}\nexport function nestedObj(row, col) {\n  let outerObj = {};\n  for (let i = 0; i < row; i++) {\n    outerObj[i] = [];\n    for (let j = 0; j < col; j++) {\n      outerObj[i].push(\"\");\n    }\n  }\n  return outerObj;\n}\nexport function nestedArray(row, col) {\n  let outerArray = [];\n  for (let i = 0; i < row; i++) {\n    let innerArray = [];\n    for (let j = 0; j < col; j++) {\n      innerArray.push(\"\");\n    }\n    outerArray.push(innerArray);\n  }\n  return outerArray;\n}\nexport function extendNestedObj(rows, cols, obj) {\n  for (let i = 0; i < rows; i++) {\n    if (obj[i] === undefined) obj[i] = [];\n    for (let j = 0; j < cols; j++) {\n      if (obj[i][j] === undefined) obj[i][j] = \"\";\n    }\n  }\n  return obj;\n}\n\nexport function extendNestedArray(rows, cols, array) {\n  for (let i = 0; i < rows; i++) {\n    if (array[i] === undefined) array[i] = [];\n    for (let j = 0; j < cols; j++) {\n      if (array[i][j] === undefined) array[i][j] = \"\";\n    }\n  }\n  return array;\n}\n\nexport function clone_nested_array(prevArray) {\n  let newArray = [];\n  for (let i = 0; i < prevArray.length; i++) {\n    newArray.push([]);\n    for (let j = 0; j < prevArray.length; j++) {\n      newArray[i][j] = prevArray[i][j];\n    }\n  }\n  return newArray;\n}\n\nexport function clone_array(prevArray) {\n  let newArray = [];\n  for (let i = 0; i < prevArray.length; i++) {\n    newArray.push(prevArray[i]);\n  }\n  return newArray;\n}\n","import React, { Component } from \"react\";\nimport Map from \"./containers/map\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Map />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\n// import _ from \"lodash\";\n// // import ActualReducer from \"./reducer_actual\";\n\n// const magicPhrase = _.curry((magicWord, muggleWord) => magicWord + muggleWord);\n// const muggleWordAccepter = magicPhrase(\"Abra kedabra \");\n// muggleWordAccepter(\"dishwasher\");\n// console.log(muggleWordAccepter(\"dishwasher\"));\n\nconst rootReducer = combineReducers({\n  // actualMap: ActualReducer\n});\n\nexport default rootReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reducers from \"./reducers\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst createStoreWithMiddleware = applyMiddleware()(createStore);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(reducers)}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}